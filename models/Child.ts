/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Rewrite } from './Rewrite';
import {
    RewriteFromJSON,
    RewriteFromJSONTyped,
    RewriteToJSON,
} from './Rewrite';
import type { Leaf } from './Leaf';
import {
    LeafFromJSON,
    LeafFromJSONTyped,
    LeafToJSON,
} from './Leaf';

/**
 * Child represents a node in the permission tree.
 * @export
 * @interface Child
 */
export interface Child {
    /**
     * 
     * @type {Leaf}
     * @memberof Child
     */
    leaf?: Leaf;
    /**
     * 
     * @type {Rewrite}
     * @memberof Child
     */
    rewrite?: Rewrite;
}

/**
 * Check if a given object implements the Child interface.
 */
export function instanceOfChild(value: object): value is Child {
    return true;
}

export function ChildFromJSON(json: any): Child {
    return ChildFromJSONTyped(json, false);
}

export function ChildFromJSONTyped(json: any, ignoreDiscriminator: boolean): Child {
    if (json == null) {
        return json;
    }
    return {
        
        'leaf': json['leaf'] == null ? undefined : LeafFromJSON(json['leaf']),
        'rewrite': json['rewrite'] == null ? undefined : RewriteFromJSON(json['rewrite']),
    };
}

export function ChildToJSON(value?: Child | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'leaf': LeafToJSON(value['leaf']),
        'rewrite': RewriteToJSON(value['rewrite']),
    };
}

