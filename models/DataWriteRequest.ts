/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Attribute } from './Attribute';
import {
    AttributeFromJSON,
    AttributeFromJSONTyped,
    AttributeToJSON,
} from './Attribute';
import type { DataWriteRequestMetadata } from './DataWriteRequestMetadata';
import {
    DataWriteRequestMetadataFromJSON,
    DataWriteRequestMetadataFromJSONTyped,
    DataWriteRequestMetadataToJSON,
} from './DataWriteRequestMetadata';
import type { Tuple } from './Tuple';
import {
    TupleFromJSON,
    TupleFromJSONTyped,
    TupleToJSON,
} from './Tuple';

/**
 * DataWriteRequest defines the structure of a request for writing data.
 * It contains the necessary information such as tenant_id, metadata,
 * tuples and attributes for the write operation.
 * @export
 * @interface DataWriteRequest
 */
export interface DataWriteRequest {
    /**
     * 
     * @type {DataWriteRequestMetadata}
     * @memberof DataWriteRequest
     */
    metadata?: DataWriteRequestMetadata;
    /**
     * tuples contains the list of tuples (entity-relation-entity triples) that need to be written.
     * @type {Array<Tuple>}
     * @memberof DataWriteRequest
     */
    tuples?: Array<Tuple>;
    /**
     * attributes contains the list of attributes (entity-attribute-value triples) that need to be written.
     * @type {Array<Attribute>}
     * @memberof DataWriteRequest
     */
    attributes?: Array<Attribute>;
}

/**
 * Check if a given object implements the DataWriteRequest interface.
 */
export function instanceOfDataWriteRequest(value: object): value is DataWriteRequest {
    return true;
}

export function DataWriteRequestFromJSON(json: any): DataWriteRequest {
    return DataWriteRequestFromJSONTyped(json, false);
}

export function DataWriteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataWriteRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'metadata': json['metadata'] == null ? undefined : DataWriteRequestMetadataFromJSON(json['metadata']),
        'tuples': json['tuples'] == null ? undefined : ((json['tuples'] as Array<any>).map(TupleFromJSON)),
        'attributes': json['attributes'] == null ? undefined : ((json['attributes'] as Array<any>).map(AttributeFromJSON)),
    };
}

export function DataWriteRequestToJSON(value?: DataWriteRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'metadata': DataWriteRequestMetadataToJSON(value['metadata']),
        'tuples': value['tuples'] == null ? undefined : ((value['tuples'] as Array<any>).map(TupleToJSON)),
        'attributes': value['attributes'] == null ? undefined : ((value['attributes'] as Array<any>).map(AttributeToJSON)),
    };
}

