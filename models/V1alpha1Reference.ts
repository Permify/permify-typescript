/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Constant } from './Constant';
import {
    ConstantFromJSON,
    ConstantFromJSONTyped,
    ConstantToJSON,
} from './Constant';

/**
 * Describes a resolved reference to a declaration.
 * @export
 * @interface V1alpha1Reference
 */
export interface V1alpha1Reference {
    /**
     * The fully qualified name of the declaration.
     * @type {string}
     * @memberof V1alpha1Reference
     */
    name?: string;
    /**
     * For references to functions, this is a list of `Overload.overload_id`
     * values which match according to typing rules.
     * 
     * If the list has more than one element, overload resolution among the
     * presented candidates must happen at runtime because of dynamic types. The
     * type checker attempts to narrow down this list as much as possible.
     * 
     * Empty if this is not a reference to a
     * [Decl.FunctionDecl][google.api.expr.v1alpha1.Decl.FunctionDecl].
     * @type {Array<string>}
     * @memberof V1alpha1Reference
     */
    overloadId?: Array<string>;
    /**
     * 
     * @type {Constant}
     * @memberof V1alpha1Reference
     */
    value?: Constant;
}

/**
 * Check if a given object implements the V1alpha1Reference interface.
 */
export function instanceOfV1alpha1Reference(value: object): value is V1alpha1Reference {
    return true;
}

export function V1alpha1ReferenceFromJSON(json: any): V1alpha1Reference {
    return V1alpha1ReferenceFromJSONTyped(json, false);
}

export function V1alpha1ReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1Reference {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'overloadId': json['overloadId'] == null ? undefined : json['overloadId'],
        'value': json['value'] == null ? undefined : ConstantFromJSON(json['value']),
    };
}

export function V1alpha1ReferenceToJSON(value?: V1alpha1Reference | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'overloadId': value['overloadId'],
        'value': ConstantToJSON(value['value']),
    };
}

