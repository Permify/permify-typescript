/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RewriteOperation } from './RewriteOperation';
import {
    RewriteOperationFromJSON,
    RewriteOperationFromJSONTyped,
    RewriteOperationToJSON,
} from './RewriteOperation';
import type { Child } from './Child';
import {
    ChildFromJSON,
    ChildFromJSONTyped,
    ChildToJSON,
} from './Child';

/**
 * The Rewrite message represents a specific rewrite operation.
 * This operation could be one of the following: union, intersection, or exclusion.
 * @export
 * @interface Rewrite
 */
export interface Rewrite {
    /**
     * 
     * @type {RewriteOperation}
     * @memberof Rewrite
     */
    rewriteOperation?: RewriteOperation;
    /**
     * A list of children that are operated upon by the rewrite operation.
     * @type {Array<Child>}
     * @memberof Rewrite
     */
    children?: Array<Child>;
}

/**
 * Check if a given object implements the Rewrite interface.
 */
export function instanceOfRewrite(value: object): value is Rewrite {
    return true;
}

export function RewriteFromJSON(json: any): Rewrite {
    return RewriteFromJSONTyped(json, false);
}

export function RewriteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Rewrite {
    if (json == null) {
        return json;
    }
    return {
        
        'rewriteOperation': json['rewriteOperation'] == null ? undefined : RewriteOperationFromJSON(json['rewriteOperation']),
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(ChildFromJSON)),
    };
}

export function RewriteToJSON(value?: Rewrite | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'rewriteOperation': RewriteOperationToJSON(value['rewriteOperation']),
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(ChildToJSON)),
    };
}

