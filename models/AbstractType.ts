/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1alpha1Type } from './V1alpha1Type';
import {
    V1alpha1TypeFromJSON,
    V1alpha1TypeFromJSONTyped,
    V1alpha1TypeToJSON,
} from './V1alpha1Type';

/**
 * Application defined abstract type.
 * @export
 * @interface AbstractType
 */
export interface AbstractType {
    /**
     * The fully qualified name of this abstract type.
     * @type {string}
     * @memberof AbstractType
     */
    name?: string;
    /**
     * Parameter types for this abstract type.
     * @type {Array<V1alpha1Type>}
     * @memberof AbstractType
     */
    parameterTypes?: Array<V1alpha1Type>;
}

/**
 * Check if a given object implements the AbstractType interface.
 */
export function instanceOfAbstractType(value: object): value is AbstractType {
    return true;
}

export function AbstractTypeFromJSON(json: any): AbstractType {
    return AbstractTypeFromJSONTyped(json, false);
}

export function AbstractTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AbstractType {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'parameterTypes': json['parameterTypes'] == null ? undefined : ((json['parameterTypes'] as Array<any>).map(V1alpha1TypeFromJSON)),
    };
}

export function AbstractTypeToJSON(value?: AbstractType | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'parameterTypes': value['parameterTypes'] == null ? undefined : ((value['parameterTypes'] as Array<any>).map(V1alpha1TypeToJSON)),
    };
}

