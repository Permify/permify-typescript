/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CheckResult } from './CheckResult';
import {
    CheckResultFromJSON,
    CheckResultFromJSONTyped,
    CheckResultToJSON,
} from './CheckResult';

/**
 * PermissionSubjectPermissionResponse is the response message for the SubjectPermission method in the Permission service.
 * @export
 * @interface PermissionSubjectPermissionResponse
 */
export interface PermissionSubjectPermissionResponse {
    /**
     * Map of results for each permission check.
     * @type {{ [key: string]: CheckResult; }}
     * @memberof PermissionSubjectPermissionResponse
     */
    results?: { [key: string]: CheckResult; };
}

/**
 * Check if a given object implements the PermissionSubjectPermissionResponse interface.
 */
export function instanceOfPermissionSubjectPermissionResponse(value: object): value is PermissionSubjectPermissionResponse {
    return true;
}

export function PermissionSubjectPermissionResponseFromJSON(json: any): PermissionSubjectPermissionResponse {
    return PermissionSubjectPermissionResponseFromJSONTyped(json, false);
}

export function PermissionSubjectPermissionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermissionSubjectPermissionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'results': json['results'] == null ? undefined : (mapValues(json['results'], CheckResultFromJSON)),
    };
}

export function PermissionSubjectPermissionResponseToJSON(value?: PermissionSubjectPermissionResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'results': value['results'] == null ? undefined : (mapValues(value['results'], CheckResultToJSON)),
    };
}

