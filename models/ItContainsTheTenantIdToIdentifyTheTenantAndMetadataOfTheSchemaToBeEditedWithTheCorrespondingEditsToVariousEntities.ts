/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SchemaPartialWriteRequestMetadata } from './SchemaPartialWriteRequestMetadata';
import {
    SchemaPartialWriteRequestMetadataFromJSON,
    SchemaPartialWriteRequestMetadataFromJSONTyped,
    SchemaPartialWriteRequestMetadataToJSON,
} from './SchemaPartialWriteRequestMetadata';
import type { Partials } from './Partials';
import {
    PartialsFromJSON,
    PartialsFromJSONTyped,
    PartialsToJSON,
} from './Partials';

/**
 * 
 * @export
 * @interface ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities
 */
export interface ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities {
    /**
     * 
     * @type {SchemaPartialWriteRequestMetadata}
     * @memberof ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities
     */
    metadata?: SchemaPartialWriteRequestMetadata;
    /**
     * 
     * @type {{ [key: string]: Partials; }}
     * @memberof ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities
     */
    partials?: { [key: string]: Partials; };
}

/**
 * Check if a given object implements the ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities interface.
 */
export function instanceOfItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities(value: object): value is ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities {
    return true;
}

export function ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntitiesFromJSON(json: any): ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities {
    return ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntitiesFromJSONTyped(json, false);
}

export function ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities {
    if (json == null) {
        return json;
    }
    return {
        
        'metadata': json['metadata'] == null ? undefined : SchemaPartialWriteRequestMetadataFromJSON(json['metadata']),
        'partials': json['partials'] == null ? undefined : (mapValues(json['partials'], PartialsFromJSON)),
    };
}

export function ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntitiesToJSON(value?: ItContainsTheTenantIdToIdentifyTheTenantAndMetadataOfTheSchemaToBeEditedWithTheCorrespondingEditsToVariousEntities | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'metadata': SchemaPartialWriteRequestMetadataToJSON(value['metadata']),
        'partials': value['partials'] == null ? undefined : (mapValues(value['partials'], PartialsToJSON)),
    };
}

