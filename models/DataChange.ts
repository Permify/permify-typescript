/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Attribute } from './Attribute';
import {
    AttributeFromJSON,
    AttributeFromJSONTyped,
    AttributeToJSON,
} from './Attribute';
import type { Tuple } from './Tuple';
import {
    TupleFromJSON,
    TupleFromJSONTyped,
    TupleToJSON,
} from './Tuple';
import type { DataChangeOperation } from './DataChangeOperation';
import {
    DataChangeOperationFromJSON,
    DataChangeOperationFromJSONTyped,
    DataChangeOperationToJSON,
} from './DataChangeOperation';

/**
 * DataChange represents a single change in data, with an operation type and the actual change which could be a tuple or an attribute.
 * @export
 * @interface DataChange
 */
export interface DataChange {
    /**
     * 
     * @type {DataChangeOperation}
     * @memberof DataChange
     */
    operation?: DataChangeOperation;
    /**
     * 
     * @type {Tuple}
     * @memberof DataChange
     */
    tuple?: Tuple;
    /**
     * 
     * @type {Attribute}
     * @memberof DataChange
     */
    attribute?: Attribute;
}

/**
 * Check if a given object implements the DataChange interface.
 */
export function instanceOfDataChange(value: object): value is DataChange {
    return true;
}

export function DataChangeFromJSON(json: any): DataChange {
    return DataChangeFromJSONTyped(json, false);
}

export function DataChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataChange {
    if (json == null) {
        return json;
    }
    return {
        
        'operation': json['operation'] == null ? undefined : DataChangeOperationFromJSON(json['operation']),
        'tuple': json['tuple'] == null ? undefined : TupleFromJSON(json['tuple']),
        'attribute': json['attribute'] == null ? undefined : AttributeFromJSON(json['attribute']),
    };
}

export function DataChangeToJSON(value?: DataChange | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'operation': DataChangeOperationToJSON(value['operation']),
        'tuple': TupleToJSON(value['tuple']),
        'attribute': AttributeToJSON(value['attribute']),
    };
}

