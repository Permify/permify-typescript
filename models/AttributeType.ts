/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Enumerates the types of attribute.
 * 
 *  - ATTRIBUTE_TYPE_UNSPECIFIED: Not specified attribute type. This is the default value.
 *  - ATTRIBUTE_TYPE_BOOLEAN: A boolean attribute type.
 *  - ATTRIBUTE_TYPE_BOOLEAN_ARRAY: A boolean array attribute type.
 *  - ATTRIBUTE_TYPE_STRING: A string attribute type.
 *  - ATTRIBUTE_TYPE_STRING_ARRAY: A string array attribute type.
 *  - ATTRIBUTE_TYPE_INTEGER: An integer attribute type.
 *  - ATTRIBUTE_TYPE_INTEGER_ARRAY: An integer array attribute type.
 *  - ATTRIBUTE_TYPE_DOUBLE: A double attribute type.
 *  - ATTRIBUTE_TYPE_DOUBLE_ARRAY: A double array attribute type.
 * @export
 */
export const AttributeType = {
    Unspecified: 'ATTRIBUTE_TYPE_UNSPECIFIED',
    Boolean: 'ATTRIBUTE_TYPE_BOOLEAN',
    BooleanArray: 'ATTRIBUTE_TYPE_BOOLEAN_ARRAY',
    String: 'ATTRIBUTE_TYPE_STRING',
    StringArray: 'ATTRIBUTE_TYPE_STRING_ARRAY',
    Integer: 'ATTRIBUTE_TYPE_INTEGER',
    IntegerArray: 'ATTRIBUTE_TYPE_INTEGER_ARRAY',
    Double: 'ATTRIBUTE_TYPE_DOUBLE',
    DoubleArray: 'ATTRIBUTE_TYPE_DOUBLE_ARRAY'
} as const;
export type AttributeType = typeof AttributeType[keyof typeof AttributeType];


export function instanceOfAttributeType(value: any): boolean {
    for (const key in AttributeType) {
        if (Object.prototype.hasOwnProperty.call(AttributeType, key)) {
            if ((AttributeType as Record<string, AttributeType>)[key] === value) {
                return true;
            }
        }
    }
    return false;
}

export function AttributeTypeFromJSON(json: any): AttributeType {
    return AttributeTypeFromJSONTyped(json, false);
}

export function AttributeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeType {
    return json as AttributeType;
}

export function AttributeTypeToJSON(value?: AttributeType | null): any {
    return value as any;
}

