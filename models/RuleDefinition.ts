/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AttributeType } from './AttributeType';
import {
    AttributeTypeFromJSON,
    AttributeTypeFromJSONTyped,
    AttributeTypeToJSON,
} from './AttributeType';
import type { CheckedExpr } from './CheckedExpr';
import {
    CheckedExprFromJSON,
    CheckedExprFromJSONTyped,
    CheckedExprToJSON,
} from './CheckedExpr';

/**
 * The RuleDefinition message provides detailed information about a specific rule.
 * @export
 * @interface RuleDefinition
 */
export interface RuleDefinition {
    /**
     * The name of the rule, which follows a specific string pattern and has a maximum byte size.
     * @type {string}
     * @memberof RuleDefinition
     */
    name?: string;
    /**
     * Map of arguments for this rule. The key is the attribute name, and the value is the AttributeType.
     * @type {{ [key: string]: AttributeType; }}
     * @memberof RuleDefinition
     */
    arguments?: { [key: string]: AttributeType; };
    /**
     * 
     * @type {CheckedExpr}
     * @memberof RuleDefinition
     */
    expression?: CheckedExpr;
}

/**
 * Check if a given object implements the RuleDefinition interface.
 */
export function instanceOfRuleDefinition(value: object): value is RuleDefinition {
    return true;
}

export function RuleDefinitionFromJSON(json: any): RuleDefinition {
    return RuleDefinitionFromJSONTyped(json, false);
}

export function RuleDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'arguments': json['arguments'] == null ? undefined : (mapValues(json['arguments'], AttributeTypeFromJSON)),
        'expression': json['expression'] == null ? undefined : CheckedExprFromJSON(json['expression']),
    };
}

export function RuleDefinitionToJSON(value?: RuleDefinition | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'arguments': value['arguments'] == null ? undefined : (mapValues(value['arguments'], AttributeTypeToJSON)),
        'expression': CheckedExprToJSON(value['expression']),
    };
}

