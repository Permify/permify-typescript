/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SchemaReadRequestMetadata } from './SchemaReadRequestMetadata';
import {
    SchemaReadRequestMetadataFromJSON,
    SchemaReadRequestMetadataFromJSONTyped,
    SchemaReadRequestMetadataToJSON,
} from './SchemaReadRequestMetadata';

/**
 * SchemaReadRequest is the request message for the Read method in the Schema service.
 * It contains tenant_id and metadata about the schema to be read.
 * @export
 * @interface SchemasReadRequest
 */
export interface SchemasReadRequest {
    /**
     * 
     * @type {SchemaReadRequestMetadata}
     * @memberof SchemasReadRequest
     */
    metadata?: SchemaReadRequestMetadata;
}

/**
 * Check if a given object implements the SchemasReadRequest interface.
 */
export function instanceOfSchemasReadRequest(value: object): value is SchemasReadRequest {
    return true;
}

export function SchemasReadRequestFromJSON(json: any): SchemasReadRequest {
    return SchemasReadRequestFromJSONTyped(json, false);
}

export function SchemasReadRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchemasReadRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'metadata': json['metadata'] == null ? undefined : SchemaReadRequestMetadataFromJSON(json['metadata']),
    };
}

export function SchemasReadRequestToJSON(value?: SchemasReadRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'metadata': SchemaReadRequestMetadataToJSON(value['metadata']),
    };
}

