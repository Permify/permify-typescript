/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Status } from './Status';
import {
    StatusFromJSON,
    StatusFromJSONTyped,
    StatusToJSON,
} from './Status';
import type { WatchResponse } from './WatchResponse';
import {
    WatchResponseFromJSON,
    WatchResponseFromJSONTyped,
    WatchResponseToJSON,
} from './WatchResponse';

/**
 * 
 * @export
 * @interface StreamResultOfWatchResponse
 */
export interface StreamResultOfWatchResponse {
    /**
     * 
     * @type {WatchResponse}
     * @memberof StreamResultOfWatchResponse
     */
    result?: WatchResponse;
    /**
     * 
     * @type {Status}
     * @memberof StreamResultOfWatchResponse
     */
    error?: Status;
}

/**
 * Check if a given object implements the StreamResultOfWatchResponse interface.
 */
export function instanceOfStreamResultOfWatchResponse(value: object): value is StreamResultOfWatchResponse {
    return true;
}

export function StreamResultOfWatchResponseFromJSON(json: any): StreamResultOfWatchResponse {
    return StreamResultOfWatchResponseFromJSONTyped(json, false);
}

export function StreamResultOfWatchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamResultOfWatchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'result': json['result'] == null ? undefined : WatchResponseFromJSON(json['result']),
        'error': json['error'] == null ? undefined : StatusFromJSON(json['error']),
    };
}

export function StreamResultOfWatchResponseToJSON(value?: StreamResultOfWatchResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'result': WatchResponseToJSON(value['result']),
        'error': StatusToJSON(value['error']),
    };
}

