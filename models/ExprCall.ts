/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Expr } from './Expr';
import {
    ExprFromJSON,
    ExprFromJSONTyped,
    ExprToJSON,
} from './Expr';

/**
 * A call expression, including calls to predefined functions and operators.
 * 
 * For example, `value == 10`, `size(map_value)`.
 * @export
 * @interface ExprCall
 */
export interface ExprCall {
    /**
     * 
     * @type {Expr}
     * @memberof ExprCall
     */
    target?: Expr;
    /**
     * Required. The name of the function or method being called.
     * @type {string}
     * @memberof ExprCall
     */
    _function?: string;
    /**
     * The arguments.
     * @type {Array<Expr>}
     * @memberof ExprCall
     */
    args?: Array<Expr>;
}

/**
 * Check if a given object implements the ExprCall interface.
 */
export function instanceOfExprCall(value: object): value is ExprCall {
    return true;
}

export function ExprCallFromJSON(json: any): ExprCall {
    return ExprCallFromJSONTyped(json, false);
}

export function ExprCallFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExprCall {
    if (json == null) {
        return json;
    }
    return {
        
        'target': json['target'] == null ? undefined : ExprFromJSON(json['target']),
        '_function': json['function'] == null ? undefined : json['function'],
        'args': json['args'] == null ? undefined : ((json['args'] as Array<any>).map(ExprFromJSON)),
    };
}

export function ExprCallToJSON(value?: ExprCall | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'target': ExprToJSON(value['target']),
        'function': value['_function'],
        'args': value['args'] == null ? undefined : ((value['args'] as Array<any>).map(ExprToJSON)),
    };
}

