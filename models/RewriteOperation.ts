/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Operation enum includes potential rewrite operations.
 * OPERATION_UNION: Represents a union operation.
 * OPERATION_INTERSECTION: Represents an intersection operation.
 * OPERATION_EXCLUSION: Represents an exclusion operation.
 * 
 *  - OPERATION_UNSPECIFIED: Default, unspecified operation.
 *  - OPERATION_UNION: Represents a union operation.
 *  - OPERATION_INTERSECTION: Represents an intersection operation.
 *  - OPERATION_EXCLUSION: Represents an exclusion operation.
 * @export
 */
export const RewriteOperation = {
    Unspecified: 'OPERATION_UNSPECIFIED',
    Union: 'OPERATION_UNION',
    Intersection: 'OPERATION_INTERSECTION',
    Exclusion: 'OPERATION_EXCLUSION'
} as const;
export type RewriteOperation = typeof RewriteOperation[keyof typeof RewriteOperation];


export function instanceOfRewriteOperation(value: any): boolean {
    for (const key in RewriteOperation) {
        if (Object.prototype.hasOwnProperty.call(RewriteOperation, key)) {
            if ((RewriteOperation as Record<string, RewriteOperation>)[key] === value) {
                return true;
            }
        }
    }
    return false;
}

export function RewriteOperationFromJSON(json: any): RewriteOperation {
    return RewriteOperationFromJSONTyped(json, false);
}

export function RewriteOperationFromJSONTyped(json: any, ignoreDiscriminator: boolean): RewriteOperation {
    return json as RewriteOperation;
}

export function RewriteOperationToJSON(value?: RewriteOperation | null): any {
    return value as any;
}

