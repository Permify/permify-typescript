/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TupleSet } from './TupleSet';
import {
    TupleSetFromJSON,
    TupleSetFromJSONTyped,
    TupleSetToJSON,
} from './TupleSet';
import type { ComputedUserSet } from './ComputedUserSet';
import {
    ComputedUserSetFromJSON,
    ComputedUserSetFromJSONTyped,
    ComputedUserSetToJSON,
} from './ComputedUserSet';

/**
 * TupleToUserSet defines a mapping from tuple sets to computed user sets.
 * @export
 * @interface TupleToUserSet
 */
export interface TupleToUserSet {
    /**
     * 
     * @type {TupleSet}
     * @memberof TupleToUserSet
     */
    tupleSet?: TupleSet;
    /**
     * 
     * @type {ComputedUserSet}
     * @memberof TupleToUserSet
     */
    computed?: ComputedUserSet;
}

/**
 * Check if a given object implements the TupleToUserSet interface.
 */
export function instanceOfTupleToUserSet(value: object): value is TupleToUserSet {
    return true;
}

export function TupleToUserSetFromJSON(json: any): TupleToUserSet {
    return TupleToUserSetFromJSONTyped(json, false);
}

export function TupleToUserSetFromJSONTyped(json: any, ignoreDiscriminator: boolean): TupleToUserSet {
    if (json == null) {
        return json;
    }
    return {
        
        'tupleSet': json['tupleSet'] == null ? undefined : TupleSetFromJSON(json['tupleSet']),
        'computed': json['computed'] == null ? undefined : ComputedUserSetFromJSON(json['computed']),
    };
}

export function TupleToUserSetToJSON(value?: TupleToUserSet | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'tupleSet': TupleSetToJSON(value['tupleSet']),
        'computed': ComputedUserSetToJSON(value['computed']),
    };
}

