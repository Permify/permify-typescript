/* tslint:disable */
/* eslint-disable */
/**
 * Permify API
 * Permify is an open source authorization service for creating fine-grained and scalable authorization systems.
 *
 * The version of the OpenAPI document: v0.9.9
 * Contact: hello@permify.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Entry } from './Entry';
import {
    EntryFromJSON,
    EntryFromJSONTyped,
    EntryToJSON,
} from './Entry';

/**
 * A map or message creation expression.
 * 
 * Maps are constructed as `{'key_name': 'value'}`. Message construction is
 * similar, but prefixed with a type name and composed of field ids:
 * `types.MyType{field_id: 'value'}`.
 * @export
 * @interface CreateStruct
 */
export interface CreateStruct {
    /**
     * The type name of the message to be created, empty when creating map
     * literals.
     * @type {string}
     * @memberof CreateStruct
     */
    messageName?: string;
    /**
     * The entries in the creation expression.
     * @type {Array<Entry>}
     * @memberof CreateStruct
     */
    entries?: Array<Entry>;
}

/**
 * Check if a given object implements the CreateStruct interface.
 */
export function instanceOfCreateStruct(value: object): value is CreateStruct {
    return true;
}

export function CreateStructFromJSON(json: any): CreateStruct {
    return CreateStructFromJSONTyped(json, false);
}

export function CreateStructFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateStruct {
    if (json == null) {
        return json;
    }
    return {
        
        'messageName': json['messageName'] == null ? undefined : json['messageName'],
        'entries': json['entries'] == null ? undefined : ((json['entries'] as Array<any>).map(EntryFromJSON)),
    };
}

export function CreateStructToJSON(value?: CreateStruct | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'messageName': value['messageName'],
        'entries': value['entries'] == null ? undefined : ((value['entries'] as Array<any>).map(EntryToJSON)),
    };
}

